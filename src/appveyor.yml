image:
  - Visual Studio 2022
#  - macOS
# - Ubuntu
environment:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
before_build:
  - pwsh: |
      if ($isWindows) {
        Invoke-WebRequest "https://dot.net/v1/dotnet-install.ps1" -OutFile "./dotnet-install.ps1"
        ./dotnet-install.ps1 -JSonFile src/global.json -Architecture x64 -InstallDir 'C:\Program Files\dotnet'
      }
      if ($isMacOS) {
        Invoke-WebRequest "https://dot.net/v1/dotnet-install.sh" -OutFile "./dotnet-install.sh"
        sudo chmod u+x dotnet-install.sh
        sudo ./dotnet-install.sh --jsonfile src/global.json --architecture x64 --install-dir '/usr/local/share/dotnet'
      }
      if ($isLinux) {
        Invoke-WebRequest "https://dot.net/v1/dotnet-install.sh" -OutFile "./dotnet-install.sh"
        sudo chmod u+x dotnet-install.sh
        sudo ./dotnet-install.sh --jsonfile src/global.json --architecture x64 --install-dir '/usr/share/dotnet'
      }
  - dotnet tool restore --tool-manifest src/.config/dotnet-tools.json
build_script:
- dotnet build src/Verify.sln --configuration Release --verbosity minimal
- dotnet build src/VerifyDangling.sln --configuration Release --verbosity minimal
- dotnet test src/DanglingSnapshotsMSTestUsage --configuration Release --no-build --no-restore
- dotnet test src/DanglingSnapshotsNUnitUsage --configuration Release --no-build --no-restore
- dotnet test src/DanglingSnapshotsXunitUsage --configuration Release --no-build --no-restore
- dotnet test src/DanglingSnapshotsXunitV3Usage --configuration Release --no-build --no-restore
- pwsh: |
    if ($isWindows) {
      vstest.console src/Verify.MSTest.DerivePaths.Tests/bin/Release/net10.0/Verify.MSTest.DerivePaths.Tests.dll /logger:Appveyor
      vstest.console src/Verify.MSTest.Tests/bin/Release/net48/Verify.MSTest.Tests.dll /logger:Appveyor
      vstest.console src/Verify.MSTest.Tests/bin/Release/net10.0/Verify.MSTest.Tests.dll /logger:Appveyor
    }

#- pwsh: |
#    if ($isWindows) {
#      Set-Culture -CultureInfo de-DE
#      dotnet test src --configuration Release --no-build --no-restore
#      Set-TimeZone -Name "Russia TZ 2 Standard Time"
#      dotnet test src --configuration Release --no-build --no-restore
#    }
# begin-snippet: AppVeyorArtifacts
on_failure:
  - ps: Get-ChildItem *.received.* -recurse | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
# end-snippet
test: off
after_build:
  - pwsh: |
      if ($isWindows) {
        Get-ChildItem *.nupkg -recurse | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
      }